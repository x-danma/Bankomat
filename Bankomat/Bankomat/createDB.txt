-- READ ME

--KOPIERA DEN HÄR TEXTFILEN IN TILL EN EXECUTE QUERY I SQL SERVER.
-- VID PROBLEM, FRÅGA DANIEL.






-- =============================================
-- Create database template
-- =============================================
USE master
GO

-- Drop the database if it already exists
IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'BankDB'
)
DROP DATABASE BankDB
GO

CREATE DATABASE BankDB
GO

-- =========================================
-- Create table template
-- =========================================
USE BankDB
GO

IF OBJECT_ID('dbo.Account', 'U') IS NOT NULL
  DROP TABLE dbo.Account
GO


/****** Object: Table [dbo].[Account] Script Date: 2015-09-28 14:57:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Account] (
    [AccountID]              INT             IDENTITY (1, 1) NOT NULL,
    [CustomerID]             INT             NOT NULL,
    [AccountNumber]          INT             NOT NULL,
    [ClearingNumber]         INT             NOT NULL,
    [Balance]                DECIMAL (18, 2) NOT NULL,
    [WithdrawalLimitPerTime] DECIMAL (18, 2) NOT NULL,
    [WithdrawalLimitPerDay]  DECIMAL (18, 2) NOT NULL
);


GO
CREATE NONCLUSTERED INDEX [IX_CustomerID]
    ON [dbo].[Account]([CustomerID] ASC);




-- =========================================
-- Create table template
-- =========================================
USE BankDB
GO

IF OBJECT_ID('dbo.Card', 'U') IS NOT NULL
  DROP TABLE dbo.Card
GO


/****** Object: Table [dbo].[Card] Script Date: 2015-09-28 15:15:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Card] (
    [CardID]              INT            IDENTITY (1, 1) NOT NULL,
    [AccountID]           INT            NOT NULL,
    [CardNumber]          VARCHAR (MAX) NULL,
    [Pin]                 INT            NOT NULL,
    [PinFailsInRow]       INT            NOT NULL,
    [isActivated]         BIT            NOT NULL,
    [Customer_CustomerID] INT            NULL
);


GO
CREATE NONCLUSTERED INDEX [IX_AccountID]
    ON [dbo].[Card]([AccountID] ASC);


GO
CREATE NONCLUSTERED INDEX [IX_Customer_CustomerID]
    ON [dbo].[Card]([Customer_CustomerID] ASC);





-- =========================================
-- Create table template
-- =========================================



/****** Object: Table [dbo].[Customer] Script Date: 2015-09-28 15:26:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Customer] (
    [CustomerID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]  VARCHAR (MAX) NULL,
    [LastName]   VARCHAR (MAX) NULL,
    [SSN]        VARCHAR (MAX) NULL
);


-- =========================================
-- Create table template
-- =========================================



/****** Object: Table [dbo].[Transaction] Script Date: 2015-09-28 15:31:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Transaction] (
    [TransactionID] INT             IDENTITY (1, 1) NOT NULL,
    [AccountID]     INT             NOT NULL,
    [Amount]        DECIMAL (18, 2) NOT NULL,
    [Date]          DATETIME        NOT NULL,
    [Description]   NVARCHAR (MAX)  NULL
);


GO
CREATE NONCLUSTERED INDEX [IX_AccountID]
    ON [dbo].[Transaction]([AccountID] ASC);




-- =========================================
-- Create table template
-- =========================================





-- =============================================
-- Create basic stored procedure template
-- =============================================

-- =============================================
-- Author:	Daniel, Mårtensson
-- Create date: 2015-09-22
-- Description:	Adds a Contact to dbo.Account and returns the new CID 
-- =============================================
-- ----------------------
-- Drop stored procedure if it already exists
IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'dbo'
     AND SPECIFIC_NAME = N'sp_GetBalance' 
)
   DROP PROCEDURE dbo.sp_GetBalance
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[sp_GetBalance]
	@AccountID int,
	@Balance int output
AS
BEGIN
	SET NOCOUNT ON;

	set @Balance=(SELECT  Balance from Account where AccountID=@AccountID)

END
GO



ALTER TABLE [dbo].[Account]
    ADD CONSTRAINT [PK_dbo.Account] PRIMARY KEY CLUSTERED ([AccountID] ASC);


GO
--ALTER TABLE [dbo].[Account]
--    ADD CONSTRAINT [FK_dbo.Account_dbo.Customer_CustomerID] FOREIGN KEY ([CustomerID]) REFERENCES [dbo].[Customer] ([CustomerID]) ON DELETE CASCADE;

GO
ALTER TABLE [dbo].[Card]
    ADD CONSTRAINT [PK_dbo.Card] PRIMARY KEY CLUSTERED ([CardID] ASC);


GO
ALTER TABLE [dbo].[Card]
    ADD CONSTRAINT [FK_dbo.Card_dbo.Account_AccountID] FOREIGN KEY ([AccountID]) REFERENCES [dbo].[Account] ([AccountID]) ON DELETE CASCADE;


GO
--ALTER TABLE [dbo].[Card]
--    ADD CONSTRAINT [FK_dbo.Card_dbo.Customer_Customer_CustomerID] FOREIGN KEY ([Customer_CustomerID]) REFERENCES [dbo].[Customer] ([CustomerID]);


GO
ALTER TABLE [dbo].[Transaction]
    ADD CONSTRAINT [PK_dbo.Transaction] PRIMARY KEY CLUSTERED ([TransactionID] ASC);


GO
ALTER TABLE [dbo].[Transaction]
    ADD CONSTRAINT [FK_dbo.Transaction_dbo.Account_AccountID] FOREIGN KEY ([AccountID]) REFERENCES [dbo].[Account] ([AccountID]) ON DELETE CASCADE;



USE BankDB
GO
INSERT INTO [dbo].[Account]
		([CustomerID], [AccountNumber], [ClearingNumber], [Balance], [WithdrawalLimitPerDay], [WithdrawalLimitPerTime])
	VALUES
		(1, 1234, 1111, 10000, 5000, 20000)
GO 

INSERT INTO [dbo].[Card]
		([AccountID], [CardNumber], [Pin], [PinFailsInRow], [isActivated])
	VALUES
		(1, 123456789, 1234, 0, 'True')
GO



-- CREATE PROCEDURE dbo.sp_GetBalance
-- 	@FirstName varchar(255),
-- 	@LastName varchar(255),
-- 	@SSN varchar(13),
-- 	@CID int output,
-- 	@ErrorMsg varchar(4000) output
-- AS
	
-- 		BEGIN TRY 

-- 			set nocount on;
			
-- 			PRINT 'Adding a new contact'
-- 			BEGIN TRANSACTION [myTran]
-- 				insert into Contact(CID, FirstName, SSN, LastName) values (1, @FirstName, @SSN, @LastName)
-- 				set @CID=SCOPE_IDENTITY()
-- 				set nocount OFF
-- 			COMMIT TRANSACTION [myTran]
-- 		PRINT 'Contact(s) added'
-- END TRY

-- BEGIN CATCH
-- 	IF (@@TRANCOUNT>0)
-- 	BEGIN
-- 		PRINT ERROR_MESSAGE()
-- 		set @ErrorMsg = ERROR_MESSAGE()
-- 		PRINT 'Error, transaction will rollback'
-- 		ROLLBACK TRANSACTION [myTran]
-- 		PRINT 'Done.'
-- 	END
-- END CATCH
-- GO





