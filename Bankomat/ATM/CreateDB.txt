-- READ ME

--KOPIERA DEN HÄR TEXTFILEN IN TILL EN EXECUTE QUERY I SQL SERVER.
-- VID PROBLEM, FRÅGA DANIEL.






-- =============================================
-- Create database template
-- =============================================
USE master
GO

-- Drop the database if it already exists
IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'BankDB'
)
DROP DATABASE BankDB
GO

CREATE DATABASE BankDB
GO

-- =========================================
-- Create table template
-- =========================================
USE BankDB
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Customer] (
    [CustomerID] INT PRIMARY KEY IDENTITY (1, 1) NOT NULL,
    [FirstName]  VARCHAR (MAX) NULL,
    [LastName]   VARCHAR (MAX) NULL,
    [SSN]        VARCHAR (MAX) NULL
);


-- =========================================
-- Create table template
-- =========================================



/****** Object: Table [dbo].[Customer] Script Date: 2015-09-28 15:26:53 ******/



IF OBJECT_ID('dbo.Account', 'U') IS NOT NULL
  DROP TABLE dbo.Account
GO


/****** Object: Table [dbo].[Account] Script Date: 2015-09-28 14:57:44 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Account] (
    [AccountNumber]          INT    PRIMARY KEY  IDENTITY (1,1) NOT NULL,       
    [CustomerID]             INT             NOT NULL FOREIGN KEY REFERENCES Customer(CustomerID),
    [Balance]                DECIMAL (18, 2) NOT NULL,
    [WithdrawalLimitPerTime] DECIMAL (18, 2) NOT NULL,
    [WithdrawalLimitPerDay]  DECIMAL (18, 2) NOT NULL
);
GO

-- =========================================
-- Create table template
-- =========================================
USE BankDB
GO

IF OBJECT_ID('dbo.Card', 'U') IS NOT NULL
  DROP TABLE dbo.Card
GO


/****** Object: Table [dbo].[Card] Script Date: 2015-09-28 15:15:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Card] (
    [CardNumber]          INT PRIMARY KEY IDENTITY (1000,1) NOT NULL,
    [AccountID]           INT            NOT NULL   FOREIGN KEY REFERENCES Account(AccountNumber),
    [Pin]                 INT            NOT NULL,
    [PinFailsInRow]       INT            NOT NULL,
    [IsActivated]         BIT            NOT NULL,
);
GO






-- =========================================
-- Create table template
-- =========================================



/****** Object: Table [dbo].[Transaction] Script Date: 2015-09-28 15:31:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[TransactionHistory] (
    [TransactionID] INT             IDENTITY (1, 1) NOT NULL,
    [AccountNumber]     INT             NOT NULL FOREIGN KEY REFERENCES Account(AccountNumber) ON DELETE CASCADE,
    [Amount]        DECIMAL (18, 2) NOT NULL,
    [Date]          DATETIME        NOT NULL,
    [Description]   VARCHAR (MAX)  NULL
);


GO

CREATE TABLE [dbo].[ClickLog] (
    [ClickLogID] INT PRIMARY KEY IDENTITY (1,1) NOT NULL,
	[CustomerID] INT             ,
    [Date]       datetime             NOT NULL ,
    [Type]       VARCHAR(255)    NOT NULL,
    [Result]          VARCHAR(MAX) NOT NULL,
    
);


GO

CREATE TABLE [dbo].[ATMInfo] 
([ATMID] INT PRIMARY KEY IDENTITY (1, 1) NOT NULL, 
[NumberOfReciepts] INT NOT NULL,
[NumberOfHundreds] INT NOT NULL,
[NumberOfFivehundreds] INT NOT NULL,
);

GO

CREATE PROCEDURE [dbo].[sp_WriteToClickLog]
	@CustomerID int,
	@Type VARCHAR(255),
	@Result VARCHAR(MAX)
AS

BEGIN
SET NOCOUNT ON;
	INSERT INTO [dbo].[ClickLog]
		([CustomerID], [Date], [Type],[Result])
	VALUES
		(@CustomerID, GETDATE(), @Type, @Result)
END
GO 

-- =========================================
-- Create table template
-- =========================================





-- =============================================
-- Create basic stored procedure template
-- =============================================

-- =============================================
-- Author:	Daniel, Mårtensson
-- Create date: 2015-09-22
-- Description:	Adds a Contact to dbo.Account and returns the new CID 
-- =============================================
-- ----------------------
-- Drop stored procedure if it already exists
IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_SCHEMA = N'dbo'
     AND SPECIFIC_NAME = N'sp_GetBalance' 
)
   DROP PROCEDURE dbo.sp_GetBalance
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[sp_GetBalance]
	@AccountID int,
	@Balance int output	
AS

BEGIN 

	set nocount on;
			
	PRINT 'Getting Balance'
		set @Balance=(SELECT  Balance from Account where AccountNumber=@AccountID)
	PRINT 'Balance Got'
END 
GO


CREATE PROCEDURE [dbo].[sp_getCard]
	@CardNumber int
	
AS

		BEGIN 

			set nocount on;
			
			PRINT 'Getting CardInfo'
			
				select CardNumber, IsActivated, Pin, PinFailsInRow, CustomerID from  dbo.GetCardInfoPlustCustomerIDByCardNumberView  where  CardNumber=@CardNumber
			
		PRINT 'Card info retrieved'
END 
GO

CREATE PROCEDURE [dbo].[sp_GetCustomer]
	@CardNumber int
AS

		BEGIN 

			set nocount on;
			
			PRINT 'Getting Customer Info'
			
				select CustomerID, FirstName, LastName, SSN from CustomerInfoByCardNumberView where CardNumber=@CardNumber
			
		PRINT 'Customer info retrieved'
END 
GO


CREATE PROCEDURE [dbo].[sp_getAccount]
	@CardNumber int
	
AS

		BEGIN 

			set nocount on;
			
			PRINT 'Getting Account Info'
			
				select AccountNumber, Balance, WithdrawalLimitPerDay, WithdrawalLimitPerTime from AccountInfoByCardNumberView where CardNumber=@CardNumber
			
		PRINT 'Account info retrieved'
END 
GO


CREATE PROCEDURE [dbo].[sp_getTransactions]
	@AccountID int,
	@Count int
AS
		BEGIN 
			set nocount on
			PRINT 'Getting Customer Info'
				SELECT TOP (@Count) 
				[TransactionID]
				,[Amount]
				,[Date]
				,[Description]
  FROM [BankDB].[dbo].[TransactionHistory] order by Date desc 
  PRINT 'Customer info retrieved'
END 
GO

CREATE PROCEDURE [dbo].[sp_getATMInfo]
	@ATMID int
AS
		BEGIN 
			set nocount on
			PRINT 'Getting ATM Info'
				SELECT NumberOfReciepts, NumberOfHundreds, NumberOfFivehundreds FROM ATMInfo where ATMID = @ATMID				
  PRINT 'Customer info retrieved'
END 
GO

CREATE PROCEDURE [dbo].[sp_updateATMInfo]
	@ATMID int,
	@NumberOfReciepts int,
	@NumberOfHundreds int,
	@NumberOfFivehundreds int
AS
		BEGIN 
			set nocount on
			UPDATE [dbo].[ATMInfo]
   SET [NumberOfReciepts] = @NumberOfReciepts
      ,[NumberOfHundreds] = @NumberOfHundreds
      ,[NumberOfFivehundreds] = @NumberOfFivehundreds
 WHERE ATMID = @ATMID
END 
GO

CREATE PROCEDURE [dbo].[sp_Withdrawal]
	@AccountNumber int,
	@Amount int,
	@Description varchar(4000),
	@ErrorMsg varchar(4000) output,
	@ErrorID int output
AS
begin
declare @TotalAmount int, @Withdrawallimit int, @CurrentBalance int, @currentCustomerID int;

set @ErrorID = 0;
set @ErrorMsg = '0';


--AccountNumber=@AccountNumber
BEGIN
  BEGIN TRY 
    set nocount on;
    --PRINT 'Making Withdrawal'
    BEGIN TRANSACTION [myTran]
		set @TotalAmount = (select sum(Amount) from TransactionHistory where AccountNumber=@AccountNumber and Description='Bankomat' and Amount<0 and CONVERT(date, Date)=CONVERT(date, GETDATE())) - @Amount;
		set @Withdrawallimit = (select WithdrawalLimitPerDay from Account where AccountNumber=@AccountNumber);

		-- kolla om pengar finns
		if (@Amount > (select Balance from Account where AccountNumber=@AccountNumber))
		begin
			set @errorID=1
			--PRINT 'ERROR ID = 1'
			set @currentCustomerID = (select CustomerID from Account where AccountNumber=@AccountNumber);
			EXECUTE dbo.sp_WriteToClickLog	@currentCustomerID, @Description, 'ErrorID = 1'
		end
		-- kolla om uttagen idag blir större än tillåtna
		else if (-@TotalAmount > @Withdrawallimit)
		begin			
			set @errorID=2
			--PRINT 'ERROR ID = 2'
			set @currentCustomerID = (select CustomerID from Account where AccountNumber=@AccountNumber);
			EXECUTE dbo.sp_WriteToClickLog	@currentCustomerID, @Description, 'ErrorID = 2'
		end
		else if (@Amount > (select WithdrawalLimitPerTime from Account where AccountNumber=@AccountNumber))
		begin
			set @ErrorID=3
			set @currentCustomerID = (select CustomerID from Account where AccountNumber=@AccountNumber);
			EXECUTE dbo.sp_WriteToClickLog	@currentCustomerID, @Description, 'ErrorID = 3'
		end

		else
		begin
			declare @newBalance int;
			set @CurrentBalance = (select Balance from Account where AccountNumber=@AccountNumber)
			set	@newBalance = @CurrentBalance - @Amount

			INSERT INTO [dbo].[TransactionHistory]
           ([AccountNumber]
           ,[Amount]
           ,[Date]
           ,[Description])
     VALUES
           (@AccountNumber
           ,-@Amount
           ,GETDATE()
           ,@Description)

			UPDATE [dbo].[Account]
		SET 
			[Balance] = @newBalance WHERE AccountNumber=@AccountNumber
	
			set @currentCustomerID = (select CustomerID from Account where AccountNumber=@AccountNumber);
			declare @myConcat varchar(400);
			set @myConcat = (select concat ('Withdraw ', @Amount))
			EXECUTE dbo.sp_WriteToClickLog @currentCustomerID, @Description, @myConcat
			end
    COMMIT TRANSACTION [myTran]
    --PRINT 'Withdrawal made'
  END TRY
  BEGIN CATCH
	IF (@@TRANCOUNT>0)
	BEGIN
		--PRINT ERROR_MESSAGE()
		set @ErrorMsg = ERROR_MESSAGE()
		--PRINT 'Error, transaction will rollback'
		ROLLBACK TRANSACTION [myTran]
		--PRINT 'Done.'
	END
  END CATCH
END
end

GO


USE BankDB
GO

INSERT INTO [dbo].[Customer]
		([FirstName], LastName, SSN)
	VALUES
		('Daniel', 'Mårtensson', '8909287479')


INSERT INTO [dbo].[Customer]
		([FirstName], LastName, SSN)
	VALUES
		('Andreas', 'Syberg', '880407-8819')

INSERT INTO [dbo].[Account]
		([CustomerID], [Balance], [WithdrawalLimitPerDay], [WithdrawalLimitPerTime])
	VALUES
		(1, 1000000, 20000, 5000)
GO 
INSERT INTO [dbo].[Account]
		([CustomerID],[Balance], [WithdrawalLimitPerDay], [WithdrawalLimitPerTime])
	VALUES
		(2, 11000, 20000, 5000)
GO 

INSERT INTO [dbo].[Card]
		([AccountID], [Pin], [PinFailsInRow], [isActivated])
	VALUES
		(1, 1234, 0, 'True')
GO

INSERT INTO [dbo].[Card]
		([AccountID], [Pin], [PinFailsInRow], [isActivated])
	VALUES
		(2, 1111, 0, 'True')
GO

INSERT INTO [dbo].ATMInfo
		(NumberOfReciepts, NumberOfHundreds, NumberOfFivehundreds)
	VALUES
		(1000, 100, 500)
GO


--ALTER TABLE [dbo].[Account]
--    ADD CONSTRAINT [FK_dbo.Account_dbo.Customer_CustomerID] FOREIGN KEY ([CustomerID]) REFERENCES [dbo].[Customer] ([CustomerID]) ON DELETE CASCADE;

--GO

--ALTER TABLE [dbo].[Card]
--    ADD CONSTRAINT [FK_dbo.Card_dbo.Account_AccountID] FOREIGN KEY ([AccountID]) REFERENCES [dbo].[Account] ([AccountID]) ON DELETE CASCADE;


--GO
--ALTER TABLE [dbo].[Card]
--    ADD CONSTRAINT [FK_dbo.Card_dbo.Customer_Customer_CustomerID] FOREIGN KEY ([Customer_CustomerID]) REFERENCES [dbo].[Customer] ([CustomerID]);


--GO
--ALTER TABLE [dbo].[Transaction]
--    ADD CONSTRAINT [PK_dbo.Transaction] PRIMARY KEY CLUSTERED ([TransactionID] ASC);


--GO
--ALTER TABLE [dbo].[Transaction]
--    ADD CONSTRAINT [FK_dbo.Transaction_dbo.Account_AccountID] FOREIGN KEY ([AccountID]) REFERENCES [dbo].[Account] ([AccountID]) ON DELETE CASCADE;







-- CREATE PROCEDURE dbo.sp_GetBalance
-- 	@FirstName varchar(255),
-- 	@LastName varchar(255),
-- 	@SSN varchar(13),
-- 	@CID int output,
-- 	@ErrorMsg varchar(4000) output
-- AS
	
-- 		BEGIN TRY 

-- 			set nocount on;
			
-- 			PRINT 'Adding a new contact'
-- 			BEGIN TRANSACTION [myTran]
-- 				insert into Contact(CID, FirstName, SSN, LastName) values (1, @FirstName, @SSN, @LastName)
-- 				set @CID=SCOPE_IDENTITY()
-- 				set nocount OFF
-- 			COMMIT TRANSACTION [myTran]
-- 		PRINT 'Contact(s) added'
-- END TRY

-- BEGIN CATCH
-- 	IF (@@TRANCOUNT>0)
-- 	BEGIN
-- 		PRINT ERROR_MESSAGE()
-- 		set @ErrorMsg = ERROR_MESSAGE()
-- 		PRINT 'Error, transaction will rollback'
-- 		ROLLBACK TRANSACTION [myTran]
-- 		PRINT 'Done.'
-- 	END
-- END CATCH
-- GO

USE [BankDB]
GO

/****** Object:  View [dbo].[CustomerBalanceView]    Script Date: 2015-09-29 13:02:51 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[CustomerBalanceView]
AS
SELECT     dbo.Account.CustomerID, dbo.Customer.FirstName, dbo.Card.AccountID
FROM        dbo.Account INNER JOIN
                  dbo.Card ON dbo.Account.AccountNumber = dbo.Card.AccountID INNER JOIN
                  dbo.Customer ON dbo.Account.CustomerID = dbo.Customer.CustomerID

GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Account"
            Begin Extent = 
               Top = 7
               Left = 48
               Bottom = 170
               Right = 306
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Card"
            Begin Extent = 
               Top = 7
               Left = 354
               Bottom = 170
               Right = 548
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "Customer"
            Begin Extent = 
               Top = 7
               Left = 596
               Bottom = 170
               Right = 790
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'CustomerBalanceView'
GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'CustomerBalanceView'
GO


USE [BankDB]
GO

/****** Object:  View [dbo].[CustomerInfoByCardNumberView]    Script Date: 2015-09-29 14:21:55 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[CustomerInfoByCardNumberView]
AS
SELECT     dbo.Card.CardNumber, dbo.Customer.CustomerID, dbo.Customer.FirstName, dbo.Customer.LastName, dbo.Customer.SSN
FROM        dbo.Account INNER JOIN
                  dbo.Card ON dbo.Account.AccountNumber = dbo.Card.AccountID INNER JOIN
                  dbo.Customer ON dbo.Account.CustomerID = dbo.Customer.CustomerID

GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Account"
            Begin Extent = 
               Top = 107
               Left = 281
               Bottom = 270
               Right = 539
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Card"
            Begin Extent = 
               Top = 21
               Left = 632
               Bottom = 184
               Right = 826
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Customer"
            Begin Extent = 
               Top = 15
               Left = 34
               Bottom = 178
               Right = 228
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'CustomerInfoByCardNumberView'
GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'CustomerInfoByCardNumberView'
GO


USE [BankDB]
GO

/****** Object:  View [dbo].[AccountInfoByCardNumberView]    Script Date: 2015-09-29 14:32:25 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[AccountInfoByCardNumberView]
AS
SELECT     dbo.Account.AccountNumber, dbo.Account.Balance, dbo.Account.WithdrawalLimitPerTime, dbo.Account.WithdrawalLimitPerDay, dbo.Card.CardNumber
FROM        dbo.Account INNER JOIN
                  dbo.Card ON dbo.Account.AccountNumber = dbo.Card.AccountID

GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Account"
            Begin Extent = 
               Top = 110
               Left = 289
               Bottom = 269
               Right = 547
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "Card"
            Begin Extent = 
               Top = 30
               Left = 62
               Bottom = 193
               Right = 256
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'AccountInfoByCardNumberView'
GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'AccountInfoByCardNumberView'
GO


USE [BankDB]
GO

/****** Object:  View [dbo].[GetCardInfoPlustCustomerIDByCardNumberView]    Script Date: 2015-09-30 15:26:15 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[GetCardInfoPlustCustomerIDByCardNumberView]
AS
SELECT     dbo.Customer.CustomerID, dbo.Card.Pin, dbo.Card.PinFailsInRow, dbo.Card.IsActivated, dbo.Card.CardNumber
FROM        dbo.Account INNER JOIN
                  dbo.Card ON dbo.Account.AccountNumber = dbo.Card.AccountID INNER JOIN
                  dbo.Customer ON dbo.Account.CustomerID = dbo.Customer.CustomerID

GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "Account"
            Begin Extent = 
               Top = 73
               Left = 688
               Bottom = 236
               Right = 946
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "Card"
            Begin Extent = 
               Top = 21
               Left = 1077
               Bottom = 184
               Right = 1271
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "Customer"
            Begin Extent = 
               Top = 18
               Left = 345
               Bottom = 181
               Right = 539
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'GetCardInfoPlustCustomerIDByCardNumberView'
GO

EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'GetCardInfoPlustCustomerIDByCardNumberView'
GO





declare @ErrorMessage varchar(4000), @ErrorID int;

--Execute dbo.sp_getCard 1000;
--Execute dbo.sp_GetCustomer 1001;
--Execute dbo.sp_getAccount 1000;
declare @AccountNumber int, @Amount int, @ErrorMsg varchar(4000);



Execute dbo.sp_Withdrawal 10, 100, 'Bankomat', @ErrorMessage, @ErrorID;

execute dbo.sp_Withdrawal 1, 400, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_Withdrawal 1, 10000000, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_Withdrawal 1, 11000, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_Withdrawal 1, 5000, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_Withdrawal 1, 5000, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_Withdrawal 1, 5000, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_Withdrawal 1, 5000, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_Withdrawal 1, 5000, 'Bankomat', @ErrorMsg out, @ErrorID out
execute dbo.sp_getATMInfo 1
execute dbo.sp_updateATMInfo 1, 99, 999, 499;


/****** Script for SelectTopNRows command from SSMS  ******/
SELECT TOP 1000 [AccountNumber]
      ,[CustomerID]
      ,[Balance]
      ,[WithdrawalLimitPerTime]
      ,[WithdrawalLimitPerDay]
  FROM [BankDB].[dbo].[Account]

  /****** Script for SelectTopNRows command from SSMS  ******/
SELECT TOP 1000 [ClickLogID]
      ,[CustomerID]
      ,[Date]
      ,[Type]
      ,[Result]
  FROM [BankDB].[dbo].[ClickLog]

  /****** Script for SelectTopNRows command from SSMS  ******/
SELECT TOP 1000 [TransactionID]
      ,[AccountNumber]
      ,[Amount]
      ,[Date]
      ,[Description]
  FROM [BankDB].[dbo].[TransactionHistory]

  SELECT TOP 1000 [ATMID]
      ,[NumberOfReciepts]
      ,[NumberOfHundreds]
      ,[NumberOfFivehundreds]
  FROM [BankDB].[dbo].[ATMInfo]